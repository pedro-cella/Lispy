?start  : value+

?value  : atomic

?assert : STRING "=" value

?atomic : INT    -> int
        | FLOAT  -> float
        | TRUE   -> true
        | FALSE  -> false
        | symbol
        | STRING -> string
        | list
        | quote
        | op
        | let
        | cond_if
        
        
list   : "(" ")"
       | "(" value+ ")"

quote  : "'" value

op : "[" value  symbol value "]"

symbol: SYMBOL

let : ":" "let" "{" (symbol "=" value)* "}" "in" list

cond_if  : ":""if" value "then" ":" value (":" "elif" value "then" ":" value)+ (":" "else" ":" value)? 
         | ":""if" value "then" ":" value (":" "else" ":" value)?

// Terminais
SYMBOL.0  : /[-!+\/*@$%^&~<>?\"|\\\w=]+/
STRING    : /\"[^\"\\]*(\\[^\n\t\r\f][^\"\\]*)*\"/
INT.1     : /-?\d+/
FLOAT.2   : /-?\d+\.\d+/
TRUE      : /\#t/
FALSE     : /\#f/

%ignore /\s+/
%ignore /;[^\n]*/